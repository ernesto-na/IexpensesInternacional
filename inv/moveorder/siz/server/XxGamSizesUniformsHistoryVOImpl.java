package xxgam.oracle.apps.inv.moveorder.siz.server;

import java.util.ArrayList;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.Number;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamSizesUniformsHistoryVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public XxGamSizesUniformsHistoryVOImpl() {
    }
    
    public void initUpdateSizesRegisters(String[] identificador){
        String methodName = "updateSizesRegisters";
        String retval = "EXEPTION";
        
        System.out.println("DEBUG GNOSISHCM Into " + methodName);

        System.out.println(identificador[1]);
        System.out.println(identificador[2]);
        System.out.println(identificador[3]);
        System.out.println(identificador[4]);
        System.out.println(identificador[5]);
        
        Number[] identificadorNum = new Number[6];
        identificadorNum[0] = this.converteStringToNumber(identificador[1]);
        identificadorNum[1] = this.converteStringToNumber(identificador[2]);
        identificadorNum[2] = this.converteStringToNumber(identificador[3]);
        identificadorNum[3] = this.converteStringToNumber(identificador[4]);
        identificadorNum[4] = this.converteStringToNumber(identificador[5]);
        
        
        ViewCriteria viewCriteria = this.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow =  viewCriteria.createViewCriteriaRow();
        try{
            viewCriteriaRow.setAttribute("PersonId", identificadorNum[0]);
            viewCriteriaRow.setAttribute("AssignmentId", identificadorNum[1]);
            viewCriteriaRow.setAttribute("JobId", identificadorNum[2]);
            viewCriteriaRow.setAttribute("CodeCombinationId", identificadorNum[3]);
            viewCriteriaRow.setAttribute("PersonTypeId", identificadorNum[4]);
            
            viewCriteria.add(viewCriteriaRow);
            
            this.applyViewCriteria(viewCriteria);
            
            System.out.println(this.getQuery());
            
            this.executeQuery();
            
            retval="Sucess!";
        }catch(Exception e){
            System.out.println(e.getCause() + e.getMessage());
            identificador[0]=retval;  
        }
        identificador[0]=retval;  
    }
    
    public void initQueryUpdateRegisters(String[] identificador, String pNomenclature){
        String methodName = "initQueryUpdateRegisters";
        String retval = "EXCEPTION";
        
        System.out.println("DEBUG GNOSISHCM Into " + methodName);
        
        System.out.println(identificador[1]);
        System.out.println(identificador[2]);
        System.out.println(identificador[3]);
        System.out.println(identificador[4]);
        System.out.println(identificador[5]);
        
        Number[] identificadorNum = new Number[5];
        identificadorNum[0] = this.converteStringToNumber(identificador[1]);
        identificadorNum[1] = this.converteStringToNumber(identificador[2]);
        identificadorNum[2] = this.converteStringToNumber(identificador[3]);
        identificadorNum[3] = this.converteStringToNumber(identificador[4]);
        identificadorNum[4] = this.converteStringToNumber(identificador[5]);
        
        ViewCriteria viewCriteria = this.createViewCriteria();
        ViewCriteriaRow viewCriteriaRow =  viewCriteria.createViewCriteriaRow();
        try{
            viewCriteriaRow.setAttribute("PersonId", identificadorNum[0]);
            viewCriteriaRow.setAttribute("AssignmentId", identificadorNum[1]);
            viewCriteriaRow.setAttribute("JobId", identificadorNum[2]);
            viewCriteriaRow.setAttribute("CodeCombinationId", identificadorNum[3]);
            viewCriteriaRow.setAttribute("PersonTypeId", identificadorNum[4]);
            viewCriteriaRow.setAttribute("Nomenclature", pNomenclature);
            
            viewCriteria.add(viewCriteriaRow);
            
            this.applyViewCriteria(viewCriteria);
            
            System.out.println(this.getQuery());
            
            this.executeQuery();
            
            retval="Sucess!";
        }catch(Exception e){
            System.out.println(e.getCause() + e.getMessage());
            identificador[0]=retval;  
        }
        identificador[0]=retval;  
    }
    
    public void clearQueryIdentif()
    {
      String methodName = "clearQuery";
      System.out.println("DEBUG GNOSISHCM Into  " + methodName);
    
      clearCache();
      setWhereClause(null);
      setWhereClauseParams(null);
    
      setWhereClause("1 = :1");
      setWhereClauseParam(0, Integer.valueOf(0));
      executeQuery();
    }
    
    public Number converteStringToNumber(String pValue){
        String methodName = "converteIntegerToNumber";
        Number retvalNumber = null;
        
        System.out.println("DEBUG GNOSISHCM Into : "+methodName);
        
        try {
            retvalNumber = new Number(pValue);
        } catch (Exception e) {
            System.out.println("DEBUG GNOSISHCM EXCEPTION");
            System.out.println("Excp: "+e.getCause()+"   "+e.getMessage());
        }
        return retvalNumber;
    }
}
