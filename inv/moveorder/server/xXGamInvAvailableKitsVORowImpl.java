package xxgam.oracle.apps.inv.moveorder.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.server.AttributeDefImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class xXGamInvAvailableKitsVORowImpl extends OAViewRowImpl {
    public static final int KITCODE = 0;
    public static final int KITDESC = 1;
    public static final int DESCRIPTION = 2;
    public static final int TAG = 3;
    public static final int STARTDATEACTIVE = 4;
    public static final int ENDDATEACTIVE = 5;
    public static final int LOOKUPCODE = 6;
    public static final int MEANING = 7;

    /**This is the default constructor (do not remove)
     */
    public xXGamInvAvailableKitsVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute KitCode
     */
    public String getKitCode() {
        return (String)getAttributeInternal(KITCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute KitCode
     */
    public void setKitCode(String value) {
        setAttributeInternal(KITCODE, value);
    }

    /**Gets the attribute value for the calculated attribute KitDesc
     */
    public String getKitDesc() {
        return (String)getAttributeInternal(KITDESC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute KitDesc
     */
    public void setKitDesc(String value) {
        setAttributeInternal(KITDESC, value);
    }

    /**Gets the attribute value for the calculated attribute Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for the calculated attribute Tag
     */
    public String getTag() {
        return (String)getAttributeInternal(TAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Tag
     */
    public void setTag(String value) {
        setAttributeInternal(TAG, value);
    }

    /**Gets the attribute value for the calculated attribute StartDateActive
     */
    public Date getStartDateActive() {
        return (Date)getAttributeInternal(STARTDATEACTIVE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StartDateActive
     */
    public void setStartDateActive(Date value) {
        setAttributeInternal(STARTDATEACTIVE, value);
    }

    /**Gets the attribute value for the calculated attribute EndDateActive
     */
    public Date getEndDateActive() {
        return (Date)getAttributeInternal(ENDDATEACTIVE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EndDateActive
     */
    public void setEndDateActive(Date value) {
        setAttributeInternal(ENDDATEACTIVE, value);
    }

    /**Gets the attribute value for the calculated attribute LookupCode
     */
    public String getLookupCode() {
        return (String)getAttributeInternal(LOOKUPCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute LookupCode
     */
    public void setLookupCode(String value) {
        setAttributeInternal(LOOKUPCODE, value);
    }

    /**Gets the attribute value for the calculated attribute Meaning
     */
    public String getMeaning() {
        return (String)getAttributeInternal(MEANING);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Meaning
     */
    public void setMeaning(String value) {
        setAttributeInternal(MEANING, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case KITCODE:
            return getKitCode();
        case KITDESC:
            return getKitDesc();
        case DESCRIPTION:
            return getDescription();
        case TAG:
            return getTag();
        case STARTDATEACTIVE:
            return getStartDateActive();
        case ENDDATEACTIVE:
            return getEndDateActive();
        case LOOKUPCODE:
            return getLookupCode();
        case MEANING:
            return getMeaning();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
