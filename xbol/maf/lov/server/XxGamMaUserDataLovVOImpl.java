package xxgam.oracle.apps.xbol.maf.lov.server;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.domain.Number;

import xxgam.oracle.apps.xbol.maf.lov.server.common.XxGamMaUserDataLovVO;
import xxgam.oracle.apps.xbol.maf.utils.XxGamAOLMessages;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaUserDataLovVOImpl extends OAViewObjectImpl implements XxGamMaUserDataLovVO {

    /**
     * Contiene clave para definir el tipo de proveedor empleado
     */
    public static final String VENDOR_TYPE_EMPLOYEE = "EMPLOYEE";

    /**
     * This is the default constructor (do not remove)
     */
    public XxGamMaUserDataLovVOImpl() {
    }


    /**
     * Ejecuta la consulta de datos de usuario con el nombre de usuario y el tipo
     * de proveedor.
     * @param strUserName contiene el valor de user name
     * @param strVendorType contiene el valor del tipo de proveedor
     */
    public void searchUser(String strUserName, String strVendorType) {

        if (strUserName != null && strVendorType != null) {

            setWhereClause("vendor_type_lookup_code = :1 and user_name = :2");
            setWhereClauseParams(null);
            setWhereClauseParam(0, strVendorType);
            setWhereClauseParam(1, strUserName);
            executeQuery();
        }
    }

    /**
     * Ejecuta la consulta de datos de usuario con el id persona del empleado
     * el tipo de proveedor
     * @param personId contiene el id persona del empleado
     * @param strVendorType contiene el tipo de proveedor
     */
    public void searchUserByPersonId(Number personId, String strVendorType){
        if (personId != null && strVendorType != null) {

            setWhereClause("vendor_type_lookup_code = :1 and person_id = :2");
            setWhereClauseParams(null);
            setWhereClauseParam(0, strVendorType);
            setWhereClauseParam(1, personId);
            executeQuery();
        }
    }

    /**
     * Obtiene la clave de la persona.
     *
     * @param strUserName Nombre de usuario.
     * @param strVendorType Tipo de persona.
     *
     * @return clave de la persona.
     */
    public Number getPersonId(String strUserName, String strVendorType) {

        //Verifica nulidad
        if (strUserName == null || strVendorType == null)
            return null;

        //Obtiene el registro.

        Number nPersonId = null;
        XxGamMaUserDataLovVORowImpl rowActual = null;

        try {
            searchUser(strUserName, strVendorType);

            if (hasNext()) {

                //Obtiene el registro y lo convierte en current row
                rowActual = (XxGamMaUserDataLovVORowImpl)first();

                //Verifica nulidad
                if (rowActual == null)
                    return null;

                //Obtiene la clave del empleado
                setCurrentRow(rowActual);
                nPersonId = rowActual.getPersonId();
            } 
        } catch (Exception exception) {
             throw new OAException(XxGamAOLMessages.GenericType.SHORT_NAME_XBOL,
                                               XxGamAOLMessages.GenericType.XXGAM_MAF_IDPER_NF_ERROR,
                                               null, OAException.ERROR, null);
        }

        //Regresa la respuesta
        return nPersonId;
    }
}
