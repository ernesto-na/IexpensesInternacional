package xxgam.oracle.apps.xbol.maf.lov.server;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.domain.Number;

import xxgam.oracle.apps.xbol.maf.lov.server.common.XxGamMaLookupGenericLovVO;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaLookupGenericLovVOImpl extends OAViewObjectImpl implements XxGamMaLookupGenericLovVO {

    /**
     * Contiene el valor del tipo de lookup
     */
    private String lookupType;

    /**
     * Contiene el id de aplicacion
     */
    private Number viewApplicationId;

    /**This is the default constructor (do not remove)
     */
    public XxGamMaLookupGenericLovVOImpl() {
    }

    /**
     * Busca los valores de lookup de la tabla FND_LOOKUP_VALUE de APPS, por
     * tipo de lookup, lenguaje e identificador de aplicacion
     * @param strLookupType contiene el tipo de lookup
     * @param numViewApplication contiene el id de aplicacion
     */
    public void searchLookup(String strLookupType, Number numViewApplication) {

        if (strLookupType != null) {
            set_lookupType(strLookupType);
        }
        if (numViewApplication != null) {
            setViewApplicationId(numViewApplication);
        }
        executeQuery();
    }

    /**
     * Configura view criteria para buscar por lookup type y id de aplicacion
     * @param strLookupType contiene el lookup type
     * @param numViewApplication contiene el id de aplicacion
     */
    public void setLookupVC(String strLookupType, Number numViewApplication) {

        //Declaración de los recursos
        ViewCriteria vcLookup = null;
        ViewCriteriaRow vcLookupRow = null;

        //Crea el view criteria
        vcLookup = createViewCriteria();
        vcLookupRow = vcLookup.createViewCriteriaRow();

        //Inicializa el tipo de lookup
        if (strLookupType != null && !"".equals(strLookupType))
            vcLookupRow.setAttribute("LookupType", strLookupType);

        //Inicializa la aplicacion
        if (numViewApplication != null)
            vcLookupRow.setAttribute("ViewApplicationId", numViewApplication);

        try {
            //Inicializa el criteria y lo aplica
            vcLookup.addElement(vcLookupRow);
            applyViewCriteria(vcLookup);
        } catch (Exception exception) {
            //Propaga la excepcion
            exception.printStackTrace();
        }
    }

    public void executeQuery() {
        String strLookupType = null;
        Number numViewApplication = null;

        strLookupType = getLookupType();
        numViewApplication = getViewApplicationId();

        if (strLookupType != null || numViewApplication != null) {
            setLookupVC(strLookupType, numViewApplication);
        }

        super.executeQuery();
        clearViewCriterias();
    }

    /**
     * Inicializa el lookup.
     *
     * @param lookupType Tipo de lookup.
     * @param applicationId Clave de la aplicación.
     */
    public void setLookupType(String lookupType, Number applicationId) {

        //Declaración de los recursos
        ViewCriteria vcLookup = null;
        ViewCriteriaRow vcLookupRow = null;

        //Crea el view criteria
        vcLookup = createViewCriteria();
        vcLookupRow = vcLookup.createViewCriteriaRow();

        //Inicializa el tipo de lookup
        if (lookupType != null && !"".equals(lookupType))
            vcLookupRow.setAttribute("LookupType", lookupType);

        //Inicializa la aplicacion
        if (applicationId != null)
            vcLookupRow.setAttribute("ViewApplicationId", applicationId);

        try {
            //Inicializa el criteria y lo aplica
            vcLookup.addElement(vcLookupRow);
            applyViewCriteria(vcLookup);
            executeQuery();
        } catch (Exception exception) {

            //Propaga la excepcion
            exception.printStackTrace();
            throw new OAException("No es posible inicializar los valores", 
                                  OAException.WARNING);
        }

    }


    public void set_lookupType(String _lookupType) {
        this.lookupType = _lookupType;
    }

    public String getLookupType() {
        return lookupType;
    }

    public void setViewApplicationId(Number viewApplicationId) {
        this.viewApplicationId = viewApplicationId;
    }

    public Number getViewApplicationId() {
        return viewApplicationId;
    }
}
