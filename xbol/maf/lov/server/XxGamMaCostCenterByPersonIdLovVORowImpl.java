package xxgam.oracle.apps.xbol.maf.lov.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaCostCenterByPersonIdLovVORowImpl extends OAViewRowImpl {
    public static final int SEGMENT3 = 0;
    public static final int CODECOMBINATIONID = 1;
    public static final int EMPLOYEEPERSONID = 2;
    public static final int CURRENCYCODE = 3;
    public static final int CURRENCYNAME = 4;
    public static final int VCMEANING = 5;
    public static final int VCLOOKUPTYPE = 6;
    public static final int VCLOOKUPCODE = 7;
    public static final int VCMEANINGXX = 8;
    public static final int COSTCENTER = 9;

    /**This is the default constructor (do not remove)
     */
    public XxGamMaCostCenterByPersonIdLovVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute Segment3
     */
    public String getSegment3() {
        return (String)getAttributeInternal(SEGMENT3);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Segment3
     */
    public void setSegment3(String value) {
        setAttributeInternal(SEGMENT3, value);
    }


    /**Gets the attribute value for the calculated attribute CurrencyCode
     */
    public String getCurrencyCode() {
        return (String)getAttributeInternal(CURRENCYCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CurrencyCode
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SEGMENT3:
            return getSegment3();
        case CODECOMBINATIONID:
            return getCodeCombinationId();
        case EMPLOYEEPERSONID:
            return getEmployeePersonId();
        case CURRENCYCODE:
            return getCurrencyCode();
        case CURRENCYNAME:
            return getCurrencyName();
        case VCMEANING:
            return getVcMeaning();
        case VCLOOKUPTYPE:
            return getVcLookupType();
        case VCLOOKUPCODE:
            return getVcLookupCode();
        case VCMEANINGXX:
            return getVcMeaningxx();
        case COSTCENTER:
            return getcostCenter();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case CURRENCYNAME:
            setCurrencyName((String)value);
            return;
        case VCMEANINGXX:
            setVcMeaningxx((String)value);
            return;
        case COSTCENTER:
            setcostCenter((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute CodeCombinationId
     */
    public Number getCodeCombinationId() {
        return (Number)getAttributeInternal(CODECOMBINATIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CodeCombinationId
     */
    public void setCodeCombinationId(Number value) {
        setAttributeInternal(CODECOMBINATIONID, value);
    }

    /**Gets the attribute value for the calculated attribute EmployeePersonId
     */
    public Number getEmployeePersonId() {
        return (Number)getAttributeInternal(EMPLOYEEPERSONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EmployeePersonId
     */
    public void setEmployeePersonId(Number value) {
        setAttributeInternal(EMPLOYEEPERSONID, value);
    }


    /**Gets the attribute value for the calculated attribute CurrencyName
     */
    public String getCurrencyName() {
        return (String)getAttributeInternal(CURRENCYNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CurrencyName
     */
    public void setCurrencyName(String value) {
        setAttributeInternal(CURRENCYNAME, value);
    }

    /**Gets the attribute value for the calculated attribute VcMeaning
     */
    public String getVcMeaning() {
        return (String)getAttributeInternal(VCMEANING);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcMeaning
     */
    public void setVcMeaning(String value) {
        setAttributeInternal(VCMEANING, value);
    }

    /**Gets the attribute value for the calculated attribute VcLookupType
     */
    public String getVcLookupType() {
        return (String)getAttributeInternal(VCLOOKUPTYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcLookupType
     */
    public void setVcLookupType(String value) {
        setAttributeInternal(VCLOOKUPTYPE, value);
    }

    /**Gets the attribute value for the calculated attribute VcLookupCode
     */
    public String getVcLookupCode() {
        return (String)getAttributeInternal(VCLOOKUPCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcLookupCode
     */
    public void setVcLookupCode(String value) {
        setAttributeInternal(VCLOOKUPCODE, value);
    }

    /**Gets the attribute value for the calculated attribute costCenter
     */
    public String getcostCenter() {
        return (String)getAttributeInternal(COSTCENTER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute costCenter
     */
    public void setcostCenter(String value) {
        setAttributeInternal(COSTCENTER, value);
    }

    /**Gets the attribute value for the calculated attribute VcMeaningxx
     */
    public String getVcMeaningxx() {
        return (String)getAttributeInternal(VCMEANINGXX);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcMeaningxx
     */
    public void setVcMeaningxx(String value) {
        setAttributeInternal(VCMEANINGXX, value);
    }
}
