package xxgam.oracle.apps.xbol.maf.lov.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaCostCenterFlexLovVORowImpl extends OAViewRowImpl {
    public static final int COSTCENTERFLEX = 0;
    public static final int ENABLEDFLAG = 1;
    public static final int SUMMARYFLAG = 2;
    public static final int DESCRIPTION = 3;
    public static final int VCMEANING = 4;
    public static final int VCLOOKUPTYPE = 5;
    public static final int VCLOOKUPCODE = 6;
    public static final int COMPILEDVALUEATTRIBUTES = 7;
    public static final int VCMEANINGXX = 8;
    public static final int ROWNUM = 9;
    public static final int RN = 10;

    /**This is the default constructor (do not remove)
     */
    public XxGamMaCostCenterFlexLovVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute CostCenterFlex
     */
    public String getCostCenterFlex() {
        return (String)getAttributeInternal(COSTCENTERFLEX);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CostCenterFlex
     */
    public void setCostCenterFlex(String value) {
        setAttributeInternal(COSTCENTERFLEX, value);
    }

    /**Gets the attribute value for the calculated attribute EnabledFlag
     */
    public String getEnabledFlag() {
        return (String)getAttributeInternal(ENABLEDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EnabledFlag
     */
    public void setEnabledFlag(String value) {
        setAttributeInternal(ENABLEDFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute SummaryFlag
     */
    public String getSummaryFlag() {
        return (String)getAttributeInternal(SUMMARYFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SummaryFlag
     */
    public void setSummaryFlag(String value) {
        setAttributeInternal(SUMMARYFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case COSTCENTERFLEX:
            return getCostCenterFlex();
        case ENABLEDFLAG:
            return getEnabledFlag();
        case SUMMARYFLAG:
            return getSummaryFlag();
        case DESCRIPTION:
            return getDescription();
        case VCMEANING:
            return getVcMeaning();
        case VCLOOKUPTYPE:
            return getVcLookupType();
        case VCLOOKUPCODE:
            return getVcLookupCode();
        case COMPILEDVALUEATTRIBUTES:
            return getCompiledValueAttributes();
        case VCMEANINGXX:
            return getVcMeaningxx();
        case ROWNUM:
            return getRownum();
        case RN:
            return getRn();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case VCMEANING:
            setVcMeaning((String)value);
            return;
        case VCLOOKUPTYPE:
            setVcLookupType((String)value);
            return;
        case VCLOOKUPCODE:
            setVcLookupCode((String)value);
            return;
        case COMPILEDVALUEATTRIBUTES:
            setCompiledValueAttributes((String)value);
            return;
        case VCMEANINGXX:
            setVcMeaningxx((String)value);
            return;
        case ROWNUM:
            setRownum((Number)value);
            return;
        case RN:
            setRn((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute VcMeaning
     */
    public String getVcMeaning() {
        return (String)getAttributeInternal(VCMEANING);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcMeaning
     */
    public void setVcMeaning(String value) {
        setAttributeInternal(VCMEANING, value);
    }

    /**Gets the attribute value for the calculated attribute VcLookupType
     */
    public String getVcLookupType() {
        return (String)getAttributeInternal(VCLOOKUPTYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcLookupType
     */
    public void setVcLookupType(String value) {
        setAttributeInternal(VCLOOKUPTYPE, value);
    }

    /**Gets the attribute value for the calculated attribute VcLookupCode
     */
    public String getVcLookupCode() {
        return (String)getAttributeInternal(VCLOOKUPCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcLookupCode
     */
    public void setVcLookupCode(String value) {
        setAttributeInternal(VCLOOKUPCODE, value);
    }

    /**Gets the attribute value for the calculated attribute CompiledValueAttributes
     */
    public String getCompiledValueAttributes() {
        return (String)getAttributeInternal(COMPILEDVALUEATTRIBUTES);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CompiledValueAttributes
     */
    public void setCompiledValueAttributes(String value) {
        setAttributeInternal(COMPILEDVALUEATTRIBUTES, value);
    }

    /**Gets the attribute value for the calculated attribute Rownum
     */
    public Number getRownum() {
        return (Number)getAttributeInternal(ROWNUM);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Rownum
     */
    public void setRownum(Number value) {
        setAttributeInternal(ROWNUM, value);
    }

    /**Gets the attribute value for the calculated attribute Rn
     */
    public Number getRn() {
        return (Number)getAttributeInternal(RN);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Rn
     */
    public void setRn(Number value) {
        setAttributeInternal(RN, value);
    }

    /**Gets the attribute value for the calculated attribute VcMeaningxx
     */
    public String getVcMeaningxx() {
        return (String)getAttributeInternal(VCMEANINGXX);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VcMeaningxx
     */
    public void setVcMeaningxx(String value) {
        setAttributeInternal(VCMEANINGXX, value);
    }
}
