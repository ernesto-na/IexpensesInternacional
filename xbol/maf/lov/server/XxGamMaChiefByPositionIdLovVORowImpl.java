package xxgam.oracle.apps.xbol.maf.lov.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaChiefByPositionIdLovVORowImpl extends OAViewRowImpl {
    public static final int SUBJOBNAMEID = 0;
    public static final int SUBORDINATEID = 1;
    public static final int SUBPOSITIONID = 2;
    public static final int CHIEFJOBNAMEID = 3;
    public static final int CHIEFID = 4;
    public static final int CHIEFPOSITIONID = 5;

    /**This is the default constructor (do not remove)
     */
    public XxGamMaChiefByPositionIdLovVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute SubJobNameId
     */
    public String getSubJobNameId() {
        return (String)getAttributeInternal(SUBJOBNAMEID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubJobNameId
     */
    public void setSubJobNameId(String value) {
        setAttributeInternal(SUBJOBNAMEID, value);
    }

    /**Gets the attribute value for the calculated attribute SubordinateId
     */
    public Number getSubordinateId() {
        return (Number)getAttributeInternal(SUBORDINATEID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubordinateId
     */
    public void setSubordinateId(Number value) {
        setAttributeInternal(SUBORDINATEID, value);
    }

    /**Gets the attribute value for the calculated attribute SubPositionId
     */
    public Number getSubPositionId() {
        return (Number)getAttributeInternal(SUBPOSITIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SubPositionId
     */
    public void setSubPositionId(Number value) {
        setAttributeInternal(SUBPOSITIONID, value);
    }

    /**Gets the attribute value for the calculated attribute ChiefJobNameId
     */
    public String getChiefJobNameId() {
        return (String)getAttributeInternal(CHIEFJOBNAMEID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ChiefJobNameId
     */
    public void setChiefJobNameId(String value) {
        setAttributeInternal(CHIEFJOBNAMEID, value);
    }

    /**Gets the attribute value for the calculated attribute ChiefId
     */
    public Number getChiefId() {
        return (Number)getAttributeInternal(CHIEFID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ChiefId
     */
    public void setChiefId(Number value) {
        setAttributeInternal(CHIEFID, value);
    }

    /**Gets the attribute value for the calculated attribute ChiefPositionId
     */
    public Number getChiefPositionId() {
        return (Number)getAttributeInternal(CHIEFPOSITIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ChiefPositionId
     */
    public void setChiefPositionId(Number value) {
        setAttributeInternal(CHIEFPOSITIONID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SUBJOBNAMEID:
            return getSubJobNameId();
        case SUBORDINATEID:
            return getSubordinateId();
        case SUBPOSITIONID:
            return getSubPositionId();
        case CHIEFJOBNAMEID:
            return getChiefJobNameId();
        case CHIEFID:
            return getChiefId();
        case CHIEFPOSITIONID:
            return getChiefPositionId();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
