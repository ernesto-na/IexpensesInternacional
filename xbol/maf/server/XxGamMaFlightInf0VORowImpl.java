package xxgam.oracle.apps.xbol.maf.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaFlightInf0VORowImpl extends OAViewRowImpl {
    public static final int ID = 0;
    public static final int TICKETPID = 1;
    public static final int TRAVELINGFROM = 2;
    public static final int TRAVELINGTO = 3;
    public static final int DEPARTUREDATE = 4;
    public static final int RETURNDATE = 5;
    public static final int CREATIONDATE = 6;
    public static final int CREATEDBY = 7;
    public static final int SELECT = 8;
    public static final int LINE = 9;
    public static final int TRAVELINGFROMDESCRIPTION = 10;
    public static final int TRAVELINGTODESCRIPTION = 11;
    public static final int LOOKUPCODE = 12;
    public static final int LOOKUPTYPE = 13;
    public static final int LANGUAGE = 14;
    public static final int MEANING = 15;
    public static final int DESCRIPTION = 16;
    public static final int LOOKUPTYPE1 = 17;
    public static final int LANGUAGE1 = 18;
    public static final int LOOKUPCODE1 = 19;
    public static final int MEANING1 = 20;
    public static final int DESCRIPTION1 = 21;
    public static final int XXGAMMATICKETPVO1 = 22;

    /**This is the default constructor (do not remove)
     */
    public XxGamMaFlightInf0VORowImpl() {
    }

    /**Gets XxGamMaFlightInf0EO entity object.
     */
    public XxGamMaFlightInf0EOImpl getXxGamMaFlightInf0EO() {
        return (XxGamMaFlightInf0EOImpl)getEntity(0);
    }

    /**Gets the attribute value for ID using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as attribute value for ID using the alias name Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for TICKET_P_ID using the alias name TicketPId
     */
    public Number getTicketPId() {
        return (Number)getAttributeInternal(TICKETPID);
    }

    /**Sets <code>value</code> as attribute value for TICKET_P_ID using the alias name TicketPId
     */
    public void setTicketPId(Number value) {
        setAttributeInternal(TICKETPID, value);
    }

    /**Gets the attribute value for TRAVELING_FROM using the alias name TravelingFrom
     */
    public String getTravelingFrom() {
        return (String)getAttributeInternal(TRAVELINGFROM);
    }

    /**Sets <code>value</code> as attribute value for TRAVELING_FROM using the alias name TravelingFrom
     */
    public void setTravelingFrom(String value) {
        setAttributeInternal(TRAVELINGFROM, value);
    }

    /**Gets the attribute value for TRAVELING_TO using the alias name TravelingTo
     */
    public String getTravelingTo() {
        return (String)getAttributeInternal(TRAVELINGTO);
    }

    /**Sets <code>value</code> as attribute value for TRAVELING_TO using the alias name TravelingTo
     */
    public void setTravelingTo(String value) {
        setAttributeInternal(TRAVELINGTO, value);
    }

    /**Gets the attribute value for DEPARTURE_DATE using the alias name DepartureDate
     */
    public Date getDepartureDate() {
        return (Date)getAttributeInternal(DEPARTUREDATE);
    }

    /**Sets <code>value</code> as attribute value for DEPARTURE_DATE using the alias name DepartureDate
     */
    public void setDepartureDate(Date value) {
        setAttributeInternal(DEPARTUREDATE, value);
    }

    /**Gets the attribute value for RETURN_DATE using the alias name ReturnDate
     */
    public Date getReturnDate() {
        return (Date)getAttributeInternal(RETURNDATE);
    }

    /**Sets <code>value</code> as attribute value for RETURN_DATE using the alias name ReturnDate
     */
    public void setReturnDate(Date value) {
        setAttributeInternal(RETURNDATE, value);
    }

    /**Gets the attribute value for CREATION_DATE using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CREATED_BY using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }


    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ID:
            return getId();
        case TICKETPID:
            return getTicketPId();
        case TRAVELINGFROM:
            return getTravelingFrom();
        case TRAVELINGTO:
            return getTravelingTo();
        case DEPARTUREDATE:
            return getDepartureDate();
        case RETURNDATE:
            return getReturnDate();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case SELECT:
            return getSelect();
        case LINE:
            return getLine();
        case TRAVELINGFROMDESCRIPTION:
            return getTravelingFromDescription();
        case TRAVELINGTODESCRIPTION:
            return getTravelingToDescription();
        case LOOKUPCODE:
            return getLookupCode();
        case LOOKUPTYPE:
            return getLookupType();
        case LANGUAGE:
            return getLanguage();
        case MEANING:
            return getMeaning();
        case DESCRIPTION:
            return getDescription();
        case LOOKUPTYPE1:
            return getLookupType1();
        case LANGUAGE1:
            return getLanguage1();
        case LOOKUPCODE1:
            return getLookupCode1();
        case MEANING1:
            return getMeaning1();
        case DESCRIPTION1:
            return getDescription1();
        case XXGAMMATICKETPVO1:
            return getXxGamMaTicketPVO1();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ID:
            setId((Number)value);
            return;
        case TICKETPID:
            setTicketPId((Number)value);
            return;
        case TRAVELINGFROM:
            setTravelingFrom((String)value);
            return;
        case TRAVELINGTO:
            setTravelingTo((String)value);
            return;
        case DEPARTUREDATE:
            setDepartureDate((Date)value);
            return;
        case RETURNDATE:
            setReturnDate((Date)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case TRAVELINGFROMDESCRIPTION:
            setTravelingFromDescription((String)value);
            return;
        case TRAVELINGTODESCRIPTION:
            setTravelingToDescription((String)value);
            return;
        case LOOKUPCODE:
            setLookupCode((String)value);
            return;
        case LOOKUPTYPE:
            setLookupType((String)value);
            return;
        case LANGUAGE:
            setLanguage((String)value);
            return;
        case MEANING:
            setMeaning((String)value);
            return;
        case DESCRIPTION:
            setDescription((String)value);
            return;
        case LOOKUPTYPE1:
            setLookupType1((String)value);
            return;
        case LANGUAGE1:
            setLanguage1((String)value);
            return;
        case LOOKUPCODE1:
            setLookupCode1((String)value);
            return;
        case MEANING1:
            setMeaning1((String)value);
            return;
        case DESCRIPTION1:
            setDescription1((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the associated <code>Row</code> using master-detail link XxGamMaTicketPVO1
     */
    public Row getXxGamMaTicketPVO1() {
        return (Row)getAttributeInternal(XXGAMMATICKETPVO1);
    }

    /**Gets the attribute value for the calculated attribute Select
     */
    public String getSelect() {
        return (String)getAttributeInternal(SELECT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Select
     */
    public void setSelect(String value) {
        setAttributeInternal(SELECT, value);
    }

    /**Gets the attribute value for the calculated attribute Line
     */
    public Number getLine() {
        return (Number)getAttributeInternal(LINE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Line
     */
    public void setLine(Number value) {
        setAttributeInternal(LINE, value);
    }

    /**Gets the attribute value for the calculated attribute TravelingFromDescription
     */
    public String getTravelingFromDescription() {
        return (String)getAttributeInternal(TRAVELINGFROMDESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TravelingFromDescription
     */
    public void setTravelingFromDescription(String value) {
        String travTo = getTravelingToDescription();
        if (travTo != null) {
            if (value.equals(travTo)) {
                // throw new OAException("El campo Traveling From no puede ser igual al campo Traveling To",OAException.INFORMATION);
            } else {
                populateAttribute(TRAVELINGFROMDESCRIPTION, value);
            }
        } else {
            populateAttribute(TRAVELINGFROMDESCRIPTION, value);
        }
    }

    /**Gets the attribute value for the calculated attribute TravelingToDescription
     */
    public String getTravelingToDescription() {
        return (String)getAttributeInternal(TRAVELINGTODESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TravelingToDescription
     */
    public void setTravelingToDescription(String value) {
        String travFrom = getTravelingFromDescription();
        if (travFrom != null) {
            if (value.equals(travFrom)) {
                //   throw new OAException("El campo Traveling To no puede ser igual al campo Traveling From",OAException.INFORMATION);
            } else {
                populateAttribute(TRAVELINGTODESCRIPTION, value);
            }
        } else {
            populateAttribute(TRAVELINGTODESCRIPTION, value);
        }
    }

    /**Gets XxGamMaRuteFlightOrigenEO entity object.
     */
    public XxGamMaRuteFlightEOImpl getXxGamMaRuteFlightOrigenEO() {
        return (XxGamMaRuteFlightEOImpl)getEntity(1);
    }

    /**Gets XxGamMaRuteFlightDestinoEO entity object.
     */
    public XxGamMaRuteFlightEOImpl getXxGamMaRuteFlightDestinoEO() {
        return (XxGamMaRuteFlightEOImpl)getEntity(2);
    }

    /**Gets the attribute value for LOOKUP_CODE using the alias name LookupCode
     */
    public String getLookupCode() {
        return (String)getAttributeInternal(LOOKUPCODE);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_CODE using the alias name LookupCode
     */
    public void setLookupCode(String value) {
        setAttributeInternal(LOOKUPCODE, value);
    }

    /**Gets the attribute value for LOOKUP_TYPE using the alias name LookupType
     */
    public String getLookupType() {
        return (String)getAttributeInternal(LOOKUPTYPE);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_TYPE using the alias name LookupType
     */
    public void setLookupType(String value) {
        setAttributeInternal(LOOKUPTYPE, value);
    }

    /**Gets the attribute value for LANGUAGE using the alias name Language
     */
    public String getLanguage() {
        return (String)getAttributeInternal(LANGUAGE);
    }

    /**Sets <code>value</code> as attribute value for LANGUAGE using the alias name Language
     */
    public void setLanguage(String value) {
        setAttributeInternal(LANGUAGE, value);
    }

    /**Gets the attribute value for MEANING using the alias name Meaning
     */
    public String getMeaning() {
        return (String)getAttributeInternal(MEANING);
    }

    /**Sets <code>value</code> as attribute value for MEANING using the alias name Meaning
     */
    public void setMeaning(String value) {
        setAttributeInternal(MEANING, value);
    }

    /**Gets the attribute value for DESCRIPTION using the alias name Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for LOOKUP_TYPE using the alias name LookupType1
     */
    public String getLookupType1() {
        return (String)getAttributeInternal(LOOKUPTYPE1);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_TYPE using the alias name LookupType1
     */
    public void setLookupType1(String value) {
        setAttributeInternal(LOOKUPTYPE1, value);
    }

    /**Gets the attribute value for LANGUAGE using the alias name Language1
     */
    public String getLanguage1() {
        return (String)getAttributeInternal(LANGUAGE1);
    }

    /**Sets <code>value</code> as attribute value for LANGUAGE using the alias name Language1
     */
    public void setLanguage1(String value) {
        setAttributeInternal(LANGUAGE1, value);
    }

    /**Gets the attribute value for LOOKUP_CODE using the alias name LookupCode1
     */
    public String getLookupCode1() {
        return (String)getAttributeInternal(LOOKUPCODE1);
    }

    /**Sets <code>value</code> as attribute value for LOOKUP_CODE using the alias name LookupCode1
     */
    public void setLookupCode1(String value) {
        setAttributeInternal(LOOKUPCODE1, value);
    }

    /**Gets the attribute value for MEANING using the alias name Meaning1
     */
    public String getMeaning1() {
        return (String)getAttributeInternal(MEANING1);
    }

    /**Sets <code>value</code> as attribute value for MEANING using the alias name Meaning1
     */
    public void setMeaning1(String value) {
        setAttributeInternal(MEANING1, value);
    }

    /**Gets the attribute value for DESCRIPTION using the alias name Description1
     */
    public String getDescription1() {
        return (String)getAttributeInternal(DESCRIPTION1);
    }

    /**Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description1
     */
    public void setDescription1(String value) {
        setAttributeInternal(DESCRIPTION1, value);
    }


}
