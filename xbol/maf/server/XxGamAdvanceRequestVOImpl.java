package xxgam.oracle.apps.xbol.maf.server;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.apps.fnd.framework.webui.OAPageContext;

import oracle.apps.fnd.framework.webui.beans.OAWebBean;

import oracle.jbo.domain.Number;

import xxgam.oracle.apps.xbol.maf.utils.XxGamConstantsUtil;
import xxgam.oracle.apps.xbol.maf.utils.XxGamMAnticiposUtil;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamAdvanceRequestVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public XxGamAdvanceRequestVOImpl() {
    }

    /**
     * Ejecuta el query de anticipo de solicitud.
     *
     */
    public void executeQueryAdvanceReq(Number nUserId, String sOpcion, OAPageContext  pageContext,  OAWebBean  webBean) {
        
        //Verifica nulidad
        if (nUserId == null)
            return;
        
            String strFranchiseType = null; 
            String strRequestType = null; 
            String nvlFranchiseType = null; 
            String nvlRequestType = null; 
            
            XxGamMAnticiposUtil.debugMessage(XxGamConstantsUtil.DEBUG_DIAGNOSTICS_MODE,"Dup franchiseType AdvPG: "+pageContext.getParameter("pfranchiseType"),pageContext,webBean);
            XxGamMAnticiposUtil.debugMessage(XxGamConstantsUtil.DEBUG_DIAGNOSTICS_MODE,"Dup Request AdvPG: "+pageContext.getParameter("pRequest"),pageContext,webBean);
            XxGamMAnticiposUtil.debugMessage(XxGamConstantsUtil.DEBUG_DIAGNOSTICS_MODE,"Dup Session franchiseType AdvPG: "+pageContext.getSessionValue("sfranchiseType"),pageContext,webBean);
            XxGamMAnticiposUtil.debugMessage(XxGamConstantsUtil.DEBUG_DIAGNOSTICS_MODE,"Dup Session Request AdvPG: "+pageContext.getSessionValue("sRequest"),pageContext,webBean);
       
            if(null!=pageContext.getParameter("pfranchiseType")&&!"".equals(pageContext.getParameter("pfranchiseType"))){
                strFranchiseType = pageContext.getParameter("pfranchiseType"); 
              }
             
             if(null!=pageContext.getParameter("pRequest")&&!"".equals(pageContext.getParameter("pRequest"))){
               strRequestType = pageContext.getParameter("pRequest"); 
             } 
           
      nvlFranchiseType = (null==strFranchiseType)?(String)pageContext.getSessionValue("sfranchiseType"):strFranchiseType; 
      nvlRequestType = (null==strRequestType)?(String)pageContext.getSessionValue("sRequest"):strRequestType; 
              
              
        reset();
        clearCache();
        //Ejecuta el query.
        setpUserId(nUserId);

        String sClauseWhere = null;
        
        if( XxGamMAnticiposUtil.validatesResponsability(pageContext,
                                                       webBean,
                                                       new Number(pageContext.getResponsibilityId()), 
                                                       XxGamConstantsUtil.RESPONSABILITY_EMPLOYEE)){
            sClauseWhere = "NUMBER_PAYMENT like 'PC%'";
        }else if( XxGamMAnticiposUtil.validatesResponsability(pageContext, 
                                                             webBean, 
                                                             new Number(pageContext.getResponsibilityId()), 
                                                             XxGamConstantsUtil.RESPONSABILITY_FRANCHISE)){
            sClauseWhere = " NUMBER_PAYMENT like 'PF%' AND ORIGIN='N' ";
        }else if(XxGamConstantsUtil.RESPONSABILITY_FRANCHISE.equals(nvlRequestType)){
          sClauseWhere = " NUMBER_PAYMENT like 'PF%' AND ORIGIN = '"+nvlFranchiseType+"'";
        }
        
        
        String strStatusClause = getClausuleWhere(sOpcion);
        if(strStatusClause != null && !"".equals(strStatusClause)){
            sClauseWhere = sClauseWhere + " AND " + strStatusClause;    
        }
        
        setWhereClause(sClauseWhere);
        executeQuery();
        
        //Reinicia los parametros de busqueda
        setWhereClause(null);
        setWhereClauseParams(null);
    }

    /**
     * Obtiene la clausula where.
     *
     * @param sOpcion Opci√≥n.
     * @return clausula where.
     */
    private String getClausuleWhere(String sOpcion) {

        //Verifica nulidad
        if (sOpcion == null)
            return null;

        String sClausuleWhere = null;

        //Obtiene la clausula where.
        if ("op1".equals(sOpcion))
            sClausuleWhere = "UPPER(TRIM(LOOKUP_CODE)) IN ('INPROGRESS')";
        else
            sClausuleWhere = "UPPER(TRIM(LOOKUP_CODE)) NOT IN ('INPROGRESS')";

        return sClausuleWhere;
    }

    /**Gets the bind variable value for pUserId
     */
    public Number getpUserId() {
        return (Number)getNamedWhereClauseParam("pUserId");
    }

    /**Sets <code>value</code> for bind variable pUserId
     */
    public void setpUserId(Number value) {
        setNamedWhereClauseParam("pUserId", value);
    }
}
