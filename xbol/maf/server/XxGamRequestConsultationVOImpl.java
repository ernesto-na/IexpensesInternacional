package xxgam.oracle.apps.xbol.maf.server;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.XMLInterface;
import oracle.jbo.domain.Date;

import oracle.xml.parser.v2.XMLNode;

import xxgam.oracle.apps.xbol.maf.utils.XxGamConstantsUtil;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamRequestConsultationVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public XxGamRequestConsultationVOImpl() {
    }

    /**
     * Busqueda avanzada de consulta de solciitudes.
     *
     * @param advanceNum Número de anticipo.
     * @param employeeName Nombre del empleado.
     * @param nameApprover Nombre del proveedor.
     * @param costCenter Centro de costos.
     * @param virtualCard Tarjeta virtual.
     * @param statusRequest Estatus de la solicitud.
     * @param statusTicket Estatus del boleto.
     * @param dateFrom Fecha inicio.
     * @param dateTo Fecha fin.
     */
    public void searchAdvanceConsultantion(String advanceNum, 
                                           String employeeName, 
                                           String nameApprover, 
                                           String costCenter, 
                                           String costCenterFlex, 
                                           String virtualCard, 
                                           String statusRequest, 
                                           String statusTicket, Date dateFrom, 
                                           Date dateTo) {

        //Inicia la busqueda
        ViewCriteria vcSolicitudes = null;
        ViewCriteriaRow vcSolicitudesRow = null;
        try {

            //Crea el view criteria
            vcSolicitudes = createViewCriteria();
            vcSolicitudesRow = vcSolicitudes.createViewCriteriaRow();

            //Inicializa los valores

            //Verifica nulidad
            if (advanceNum != null && !"".equals(advanceNum))
                vcSolicitudesRow.setAttribute("NumberPayment", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              advanceNum + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Nombre del empleado
            if (employeeName != null && !employeeName.equals(""))
                vcSolicitudesRow.setAttribute("EmployeName", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              employeeName + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Nombre del aprovador
            if (nameApprover != null && !nameApprover.equals(""))
                vcSolicitudesRow.setAttribute("ApproverName", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              nameApprover + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Centro de costos
            if (costCenter != null && !costCenter.equals(""))
                vcSolicitudesRow.setAttribute("Segment3", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              costCenter + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            if (costCenterFlex != null && !"".equals(costCenterFlex))
                vcSolicitudesRow.setAttribute("CostCenterFlex", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              costCenterFlex + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Tarjeta virtual
            if (virtualCard != null && !virtualCard.equals(""))
                vcSolicitudesRow.setAttribute("VirtualCard", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              virtualCard + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Status de la solicitud
            if (statusRequest != null && !statusRequest.equals(""))

                vcSolicitudesRow.setAttribute("StatusDescription", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              statusRequest + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Status de la solicitud
            if (statusTicket != null && !statusTicket.equals(""))

                vcSolicitudesRow.setAttribute("StatusNotification", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              statusTicket + 
                                              XxGamConstantsUtil.LIKE_CLOSE);


            //Verifica nulidad
            if (dateFrom != null && dateTo != null)
                vcSolicitudesRow.setAttribute("RequestPaymentDate", 
                                              "BETWEEN " + 
                                              getClausuleWhereDate(dateFrom) + 
                                              " AND " + 
                                              getClausuleWhereDate(dateTo));

            //Aplica el criteria y ejecuta los criterios
            vcSolicitudes.addElement(vcSolicitudesRow);
            applyViewCriteria(vcSolicitudes);
            executeQuery();

            clearViewCriterias();


        } catch (Exception exception) {
            clearViewCriterias();
        }
    }

    /**
     * Extrae la view object
     *
     * */
    public XMLNode getDataXML() {

        //Obtiene el XML node
        XMLNode xmlNode = null;

        xmlNode = (XMLNode)writeXML(0, XMLInterface.XML_IGNORE_DEPTH_COUNT);
        //Regresa el resultado
        return xmlNode;
    }

    /**
     * Construye la clausula where.
     *
     * @param dDate Fecha.
     * @return clausula where.
     */
    private String getClausuleWhereDate(Date dDate) {

        if (dDate == null)
            return null;

        //Construye la clausula where
        String sClausulePart1 = null;
        String sClausulePart2 = null;
        String sClausuleWhere = null;
        sClausulePart1 = "TO_CHAR(to_DATE('";
        sClausulePart2 = "','yyyy-mm-dd'),'yyyy-mm-dd')";


        //Construye la clausula y la regresa
        sClausuleWhere = sClausulePart1 + dDate + sClausulePart2;
        return sClausuleWhere;
    }

    /** Metodo Sobrecargado para incluir en el criterio de busqueda la unidad operativa 
     * Busqueda avanzada de consulta de solciitudes.
     *
     * @param advanceNum Número de anticipo.
     * @param employeeName Nombre del empleado.
     * @param nameApprover Nombre del proveedor.
     * @param costCenter Centro de costos.
     * @param virtualCard Tarjeta virtual.
     * @param statusRequest Estatus de la solicitud.
     * @param statusTicket Estatus del boleto.
     * @param dateFrom Fecha inicio.
     * @param dateTo Fecha fin.
     * @param operatingUnit Unidad Operativa.
     */

    void searchAdvanceConsultantion(String advanceNum, String employeeName, 
                                    String nameApprover, String costCenter, 
                                    String costCenterFlex, String virtualCard, 
                                    String statusRequest, String statusTicket, 
                                    Date dateFrom, Date dateTo, 
                                    String operatingUnit) {
        //Inicia la busqueda
        ViewCriteria vcSolicitudes = null;
        ViewCriteriaRow vcSolicitudesRow = null;
        try {

            //Crea el view criteria
            vcSolicitudes = createViewCriteria();
            vcSolicitudesRow = vcSolicitudes.createViewCriteriaRow();

            //Inicializa los valores

            //Verifica nulidad
            if (advanceNum != null && !"".equals(advanceNum))
                vcSolicitudesRow.setAttribute("NumberPayment", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              advanceNum + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Nombre del empleado
            if (employeeName != null && !employeeName.equals(""))
                vcSolicitudesRow.setAttribute("EmployeName", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              employeeName + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Nombre del aprovador
            if (nameApprover != null && !nameApprover.equals(""))
                vcSolicitudesRow.setAttribute("ApproverName", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              nameApprover + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Centro de costos
            if (costCenter != null && !costCenter.equals(""))
                vcSolicitudesRow.setAttribute("Segment3", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              costCenter + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            if (costCenterFlex != null && !"".equals(costCenterFlex))
                vcSolicitudesRow.setAttribute("CostCenterFlex", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              costCenterFlex + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Tarjeta virtual
            if (virtualCard != null && !virtualCard.equals(""))
                vcSolicitudesRow.setAttribute("VirtualCard", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              virtualCard + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Status de la solicitud
            if (statusRequest != null && !statusRequest.equals(""))

                vcSolicitudesRow.setAttribute("StatusDescription", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              statusRequest + 
                                              XxGamConstantsUtil.LIKE_CLOSE);

            //Status de la solicitud
            if (statusTicket != null && !statusTicket.equals(""))

                vcSolicitudesRow.setAttribute("StatusNotification", 
                                              XxGamConstantsUtil.LIKE_OPEN + 
                                              statusTicket + 
                                              XxGamConstantsUtil.LIKE_CLOSE);


            //Verifica nulidad
            if (dateFrom != null && dateTo != null)
                vcSolicitudesRow.setAttribute("RequestPaymentDate", 
                                              "BETWEEN " + 
                                              getClausuleWhereDate(dateFrom) + 
                                              " AND " + 
                                              getClausuleWhereDate(dateTo));

            //Unidad Operativa
            if (operatingUnit != null && !operatingUnit.equals("")) {
                vcSolicitudesRow.setAttribute("OperatingUnit", operatingUnit);
            }

            //Aplica el criteria y ejecuta los criterios
            vcSolicitudes.addElement(vcSolicitudesRow);
            applyViewCriteria(vcSolicitudes);
            executeQuery();

            clearViewCriterias();


        } catch (Exception exception) {
            clearViewCriterias();
        }

    }

}
