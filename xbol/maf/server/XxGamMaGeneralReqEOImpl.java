package xxgam.oracle.apps.xbol.maf.server;

import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;

import xxgam.oracle.apps.xbol.maf.utils.XxGamConstantsUtil;
import xxgam.oracle.apps.xbol.maf.utils.XxGamMAnticiposUtil;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxGamMaGeneralReqEOImpl extends OAEntityImpl
{
  public static final int ID = 0;
  public static final int STATUSREQUEST = 1;
  public static final int EMPLOYEEID = 2;
  public static final int REQUESTPAYMENTDATE = 3;
  public static final int APPROVALDATE = 4;
  public static final int PURPOSE = 5;
  public static final int TOTALPAYMENT = 6;
  public static final int APPROVERID = 7;
  public static final int COSTCENTER = 8;
  public static final int COSTCENTERFLEX = 9;
  public static final int GROUPPAYMENT = 10;
  public static final int TEMPLATEPAYMENT = 11;
  public static final int CURRENCYCODE = 12;
  public static final int VIRTUALCARD = 13;
  public static final int STATUSNOTIFICATION = 14;
  public static final int CREATIONDATE = 15;
  public static final int CREATEDBY = 16;
  public static final int LASTUPDATELOGIN = 17;
  public static final int LASTUPDATEDBY = 18;
  public static final int LASTUPDATEDATE = 19;
  public static final int STATUSFRANCHISE = 20;
  public static final int NUMBERPAYMENT = 21;
  public static final int ASSOCIATEDREPORT = 22;
  public static final int APPROVERALTID = 23;
  public static final int REASON = 24;
  public static final int COMMENTS = 25;
  public static final int OPERATINGUNIT = 26;
  public static final int ORIGIN = 27;
  public static final int ARRIVALTIME = 28;
  public static final int DEPARTTIME = 29;
  public static final int XXGAMMAPAYMENTREQEO = 30;
  public static final int XXGAMMATICKETPEO = 31;
  public static final int XXGAMMAPAYMENTREQEO1 = 32;


  private static OAEntityDefImpl mDefinitionObject;

  /**This is the default constructor (do not remove)
   */
    public XxGamMaGeneralReqEOImpl() {
    }


  /**Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = 
          (OAEntityDefImpl)EntityDefImpl.findDefObject("xxgam.oracle.apps.xbol.maf.server.XxGamMaGeneralReqEO");
    }
    return mDefinitionObject;
  }

  public void setCreationDate(Date date) {
    }

    public void setCreatedBy(Number number) {
    }

    public void setLastUpdateDate(Date date) {
    }

    public void setLastUpdatedBy(Number number) {
    }

    public void setLastUpdateLogin(Number number) {
    }



    /**Gets the attribute value for Id, using the alias name Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }


    /**Gets the attribute value for StatusRequest, using the alias name StatusRequest
     */
    public String getStatusRequest() {
        return (String)getAttributeInternal(STATUSREQUEST);
    }

    /**Sets <code>value</code> as the attribute value for StatusRequest
     */
    public void setStatusRequest(String value) {
        setAttributeInternal(STATUSREQUEST, value);
    }

    /**Gets the attribute value for EmployeeId, using the alias name EmployeeId
     */
    public Number getEmployeeId() {
        return (Number)getAttributeInternal(EMPLOYEEID);
    }

    /**Sets <code>value</code> as the attribute value for EmployeeId
     */
    public void setEmployeeId(Number value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**Gets the attribute value for RequestPaymentDate, using the alias name RequestPaymentDate
     */
    public Date getRequestPaymentDate() {
        return (Date)getAttributeInternal(REQUESTPAYMENTDATE);
    }

    /**Sets <code>value</code> as the attribute value for RequestPaymentDate
     */
    public void setRequestPaymentDate(Date value) {
        setAttributeInternal(REQUESTPAYMENTDATE, value);
    }

    /**Gets the attribute value for ApprovalDate, using the alias name ApprovalDate
     */
    public Date getApprovalDate() {
        return (Date)getAttributeInternal(APPROVALDATE);
    }

    /**Sets <code>value</code> as the attribute value for ApprovalDate
     */
    public void setApprovalDate(Date value) {
        setAttributeInternal(APPROVALDATE, value);
    }

    /**Gets the attribute value for Purpose, using the alias name Purpose
     */
    public String getPurpose() {
        return (String)getAttributeInternal(PURPOSE);
    }

    /**Sets <code>value</code> as the attribute value for Purpose
     */
    public void setPurpose(String value) {
        setAttributeInternal(PURPOSE, value);
    }

    /**Gets the attribute value for TotalPayment, using the alias name TotalPayment
     */
    public Number getTotalPayment() {
        return (Number)getAttributeInternal(TOTALPAYMENT);
    }

    /**Sets <code>value</code> as the attribute value for TotalPayment
     */
    public void setTotalPayment(Number value) {
        setAttributeInternal(TOTALPAYMENT, value);
    }

    /**Gets the attribute value for ApproverId, using the alias name ApproverId
     */
    public Number getApproverId() {
        return (Number)getAttributeInternal(APPROVERID);
    }

    /**Sets <code>value</code> as the attribute value for ApproverId
     */
    public void setApproverId(Number value) {
        setAttributeInternal(APPROVERID, value);
    }

    /**Gets the attribute value for CostCenter, using the alias name CostCenter
     */
    public Number getCostCenter() {
        return (Number)getAttributeInternal(COSTCENTER);
    }

    /**Sets <code>value</code> as the attribute value for CostCenter
     */
    public void setCostCenter(Number value) {
        setAttributeInternal(COSTCENTER, value);
    }

    /**Gets the attribute value for GroupPayment, using the alias name GroupPayment
     */
    public String getGroupPayment() {
        return (String)getAttributeInternal(GROUPPAYMENT);
    }

    /**Sets <code>value</code> as the attribute value for GroupPayment
     */
    public void setGroupPayment(String value) {
        setAttributeInternal(GROUPPAYMENT, value);
    }

    /**Gets the attribute value for TemplatePayment, using the alias name TemplatePayment
     */
    public Number getTemplatePayment() {
        return (Number)getAttributeInternal(TEMPLATEPAYMENT);
    }

    /**Sets <code>value</code> as the attribute value for TemplatePayment
     */
    public void setTemplatePayment(Number value) {
        setAttributeInternal(TEMPLATEPAYMENT, value);
    }

    /**Gets the attribute value for CurrencyCode, using the alias name CurrencyCode
     */
    public String getCurrencyCode() {
        return (String)getAttributeInternal(CURRENCYCODE);
    }

    /**Sets <code>value</code> as the attribute value for CurrencyCode
     */
    public void setCurrencyCode(String value) {
        setAttributeInternal(CURRENCYCODE, value);
    }

    /**Gets the attribute value for VirtualCard, using the alias name VirtualCard
     */
    public String getVirtualCard() {
        return (String)getAttributeInternal(VIRTUALCARD);
    }

    /**Sets <code>value</code> as the attribute value for VirtualCard
     */
    public void setVirtualCard(String value) {
        setAttributeInternal(VIRTUALCARD, value);
    }

    /**Gets the attribute value for StatusNotification, using the alias name StatusNotification
     */
    public String getStatusNotification() {
        return (String)getAttributeInternal(STATUSNOTIFICATION);
    }

    /**Sets <code>value</code> as the attribute value for StatusNotification
     */
    public void setStatusNotification(String value) {
        setAttributeInternal(STATUSNOTIFICATION, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Gets the attribute value for StatusFranchise, using the alias name StatusFranchise
     */
    public String getStatusFranchise() {
        return (String)getAttributeInternal(STATUSFRANCHISE);
    }

    /**Sets <code>value</code> as the attribute value for StatusFranchise
     */
    public void setStatusFranchise(String value) {
        setAttributeInternal(STATUSFRANCHISE, value);
       
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
    switch (index)
    {
    case ID:
      return getId();
    case STATUSREQUEST:
      return getStatusRequest();
    case EMPLOYEEID:
      return getEmployeeId();
    case REQUESTPAYMENTDATE:
      return getRequestPaymentDate();
    case APPROVALDATE:
      return getApprovalDate();
    case PURPOSE:
      return getPurpose();
    case TOTALPAYMENT:
      return getTotalPayment();
    case APPROVERID:
      return getApproverId();
    case COSTCENTER:
      return getCostCenter();
    case COSTCENTERFLEX:
      return getCostCenterFlex();
    case GROUPPAYMENT:
      return getGroupPayment();
    case TEMPLATEPAYMENT:
      return getTemplatePayment();
    case CURRENCYCODE:
      return getCurrencyCode();
    case VIRTUALCARD:
      return getVirtualCard();
    case STATUSNOTIFICATION:
      return getStatusNotification();
    case CREATIONDATE:
      return getCreationDate();
    case CREATEDBY:
      return getCreatedBy();
    case LASTUPDATELOGIN:
      return getLastUpdateLogin();
    case LASTUPDATEDBY:
      return getLastUpdatedBy();
    case LASTUPDATEDATE:
      return getLastUpdateDate();
    case STATUSFRANCHISE:
      return getStatusFranchise();
    case NUMBERPAYMENT:
      return getNumberPayment();
    case ASSOCIATEDREPORT:
      return getAssociatedReport();
    case APPROVERALTID:
      return getApproverAltId();
    case REASON:
      return getReason();
    case COMMENTS:
      return getComments();
    case OPERATINGUNIT:
      return getOperatingUnit();
    case ORIGIN:
      return getOrigin();
    case ARRIVALTIME:
      return getArrivalTime();
    case DEPARTTIME:
      return getDepartTime();
    case XXGAMMAPAYMENTREQEO1:
      return getXxGamMaPaymentReqEO1();
    case XXGAMMATICKETPEO:
      return getXxGamMaTicketPEO();
    case XXGAMMAPAYMENTREQEO:
      return getXxGamMaPaymentReqEO();
    default:
      return super.getAttrInvokeAccessor(index, attrDef);
    }
  }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
    switch (index)
    {
    case ID:
      setId((Number)value);
      return;
    case STATUSREQUEST:
      setStatusRequest((String)value);
      return;
    case EMPLOYEEID:
      setEmployeeId((Number)value);
      return;
    case REQUESTPAYMENTDATE:
      setRequestPaymentDate((Date)value);
      return;
    case APPROVALDATE:
      setApprovalDate((Date)value);
      return;
    case PURPOSE:
      setPurpose((String)value);
      return;
    case TOTALPAYMENT:
      setTotalPayment((Number)value);
      return;
    case APPROVERID:
      setApproverId((Number)value);
      return;
    case COSTCENTER:
      setCostCenter((Number)value);
      return;
    case COSTCENTERFLEX:
      setCostCenterFlex((String)value);
      return;
    case GROUPPAYMENT:
      setGroupPayment((String)value);
      return;
    case TEMPLATEPAYMENT:
      setTemplatePayment((Number)value);
      return;
    case CURRENCYCODE:
      setCurrencyCode((String)value);
      return;
    case VIRTUALCARD:
      setVirtualCard((String)value);
      return;
    case STATUSNOTIFICATION:
      setStatusNotification((String)value);
      return;
    case STATUSFRANCHISE:
      setStatusFranchise((String)value);
      return;
    case NUMBERPAYMENT:
      setNumberPayment((String)value);
      return;
    case ASSOCIATEDREPORT:
      setAssociatedReport((String)value);
      return;
    case APPROVERALTID:
      setApproverAltId((Number)value);
      return;
    case REASON:
      setReason((String)value);
      return;
    case COMMENTS:
      setComments((String)value);
      return;
    case OPERATINGUNIT:
      setOperatingUnit((String)value);
      return;
    case ORIGIN:
      setOrigin((String)value);
      return;
    case ARRIVALTIME:
      setArrivalTime((String)value);
      return;
    case DEPARTTIME:
      setDepartTime((String)value);
      return;
    default:
      super.setAttrInvokeAccessor(index, value, attrDef);
      return;
    }
  }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getXxGamMaPaymentReqEO() {
        return (RowIterator)getAttributeInternal(XXGAMMAPAYMENTREQEO);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getXxGamMaTicketPEO() {
        return (RowIterator)getAttributeInternal(XXGAMMATICKETPEO);
    }

    /**Gets the associated entity oracle.jbo.RowIterator
     */
    public RowIterator getXxGamMaPaymentReqEO1() {
        return (RowIterator)getAttributeInternal(XXGAMMAPAYMENTREQEO1);
    }

    /**Gets the attribute value for NumberPayment, using the alias name NumberPayment
     */
    public String getNumberPayment() {
        return (String)getAttributeInternal(NUMBERPAYMENT);
    }

    /**Sets <code>value</code> as the attribute value for NumberPayment
     */
    public void setNumberPayment(String value) {
        setAttributeInternal(NUMBERPAYMENT, value);
    }


    /**Add attribute defaulting logic in this method.
     */
        public void create(AttributeList attributeList) {

            //Declaraci�n de los recursos
            Number nReqId = null;
            String sSecuencia = null;
            
            try{

                //Obtiene la secuencia para clave primaria del registro
                sSecuencia = XxGamConstantsUtil.XX_GAM_MA_REQ_S;
                nReqId = getOADBTransaction().getSequenceValue(sSecuencia);
                
                //Verifica nulidad
                if (nReqId == null)
                    throw new OAException("No es posible generar la clave del registro",
                                          OAException.ERROR);
                
                //Inicializa los valores
                setId(nReqId);
                
                setRequestPaymentDate(XxGamMAnticiposUtil.getFechaActual());
                
            }catch(Exception exception){
                
                //Propaga el error generado
                throw new OAException(exception.getMessage(),OAException.ERROR);
            }
            super.create(attributeList);
        }

    /**Gets the attribute value for CostCenterFlex, using the alias name CostCenterFlex
     */
    public String getCostCenterFlex() {
        return (String)getAttributeInternal(COSTCENTERFLEX);
    }

    /**Sets <code>value</code> as the attribute value for CostCenterFlex
     */
    public void setCostCenterFlex(String value) {
        setAttributeInternal(COSTCENTERFLEX, value);
    }

    /**Gets the attribute value for AssociatedReport, using the alias name AssociatedReport
     */
    public String getAssociatedReport() {
        return (String)getAttributeInternal(ASSOCIATEDREPORT);
    }

    /**Sets <code>value</code> as the attribute value for AssociatedReport
     */
    public void setAssociatedReport(String value) {
        setAttributeInternal(ASSOCIATEDREPORT, value);
    }

    /**Gets the attribute value for ApproverAltId, using the alias name ApproverAltId
     */
    public Number getApproverAltId() {
        return (Number)getAttributeInternal(APPROVERALTID);
    }

    /**Sets <code>value</code> as the attribute value for ApproverAltId
     */
    public void setApproverAltId(Number value) {
        setAttributeInternal(APPROVERALTID, value);
    }

    /**Gets the attribute value for Reason, using the alias name Reason
     */
    public String getReason() {
        return (String)getAttributeInternal(REASON);
    }

    /**Sets <code>value</code> as the attribute value for Reason
     */
    public void setReason(String value) {
        setAttributeInternal(REASON, value);
    }

    /**Gets the attribute value for Comments, using the alias name Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**Sets <code>value</code> as the attribute value for Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }


  /**Gets the attribute value for OperatingUnit, using the alias name OperatingUnit
   */
  public String getOperatingUnit()
  {
    return (String)getAttributeInternal(OPERATINGUNIT);
  }

  /**Sets <code>value</code> as the attribute value for OperatingUnit
   */
  public void setOperatingUnit(String value)
  {
    setAttributeInternal(OPERATINGUNIT, value);
  }

  /**Gets the attribute value for Origin, using the alias name Origin
   */
  public String getOrigin()
  {
    return (String)getAttributeInternal(ORIGIN);
  }

  /**Sets <code>value</code> as the attribute value for Origin
   */
  public void setOrigin(String value)
  {
    System.out.println("setOrigin value:"+value);
    /****************************************************
    if(null==value||"".equals(value)){
      throw // EO name
        // EO PK
        // Attribute Name
        // Attribute value
        // Message product short name
        new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                               getEntityDef().getFullName(), getPrimaryKey(), 
                               "Origin", value, "XBOL", 
                               "XXGAM_MAF_ORIGIN_NULL"); // Message name
                               
    }
    *******************************************************/
    
    setAttributeInternal(ORIGIN, value);
  }

  /**Add entity remove logic in this method.
   */
  public void remove()
  {
    super.remove();
  }

  /**Add Entity validation code in this method.
   */
  protected void validateEntity()
  {
    super.validateEntity();
  }

  /**Gets the attribute value for ArrivalTime, using the alias name ArrivalTime
   */
  public String getArrivalTime()
  {
    return (String)getAttributeInternal(ARRIVALTIME);
  }

  /**Sets <code>value</code> as the attribute value for ArrivalTime
   */
  public void setArrivalTime(String value)
  {
    setAttributeInternal(ARRIVALTIME, value);
  }

  /**Gets the attribute value for DepartTime, using the alias name DepartTime
   */
  public String getDepartTime()
  {
    return (String)getAttributeInternal(DEPARTTIME);
  }

  /**Sets <code>value</code> as the attribute value for DepartTime
   */
  public void setDepartTime(String value)
  {
    setAttributeInternal(DEPARTTIME, value);
  }

  /**Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(Number id)
  {
    return new Key(new Object[]{id});
  }
}
